// src/lib/services/ProfessionalSalesPromptService.ts - PROMPTS PROFESSIONNELS POUR IA VENDEUSE
import { EnhancedSalesDataService } from './EnhancedSalesDataService';

interface ChatContext {
  userMessage: string;
  conversationHistory: Array<{
    type: 'user' | 'assistant';
    content: string;
    timestamp: string;
  }>;
  userIntent: 'browsing' | 'interested' | 'considering' | 'ready_to_buy' | 'objecting';
  messageCount: number;
  mentionedConcerns: string[];
  previousTopics: string[];
  sessionLength: number;
}

interface IntentAnalysis {
  primary: string;
  confidence: number;
  urgency: 'low' | 'medium' | 'high';
  buyingSignals: string[];
  objectionSignals: string[];
  informationNeeds: string[];
}

export class ProfessionalSalesPromptService {
  private static instance: ProfessionalSalesPromptService;
  private salesDataService: EnhancedSalesDataService;

  private constructor() {
    this.salesDataService = EnhancedSalesDataService.getInstance();
  }

  public static getInstance(): ProfessionalSalesPromptService {
    if (!this.instance) {
      this.instance = new ProfessionalSalesPromptService();
    }
    return this.instance;
  }

  // ‚úÖ PROMPT PRINCIPAL POUR IA VENDEUSE PROFESSIONNELLE
  async generateProfessionalSalesPrompt(
    productId: string,
    chatContext: ChatContext
  ): Promise<string> {
    try {
      console.log('üéØ Generating professional sales prompt for:', productId);

      // R√©cup√©rer toutes les donn√©es de vente
      const salesContext = await this.salesDataService.getFullSalesContext(productId);
      
      // Analyser l'intention et l'urgence du client
      const intentAnalysis = this.analyzeUserIntent(chatContext);
      
      // Construire le prompt adaptatif selon le niveau de l'interaction
      return this.buildAdaptiveSalesPrompt(salesContext, chatContext, intentAnalysis);

    } catch (error) {
      console.error('‚ùå Error generating professional sales prompt:', error);
      return this.getFallbackPrompt(productId);
    }
  }

  // ‚úÖ CONSTRUCTION DU PROMPT ADAPTATIF PROFESSIONNEL
  private buildAdaptiveSalesPrompt(
    salesContext: any,
    chatContext: ChatContext,
    intentAnalysis: IntentAnalysis
  ): string {
    const { currentProduct, testimonials, deliveryZones, salesStats, competitiveAnalysis } = salesContext;

    const prompt = `Tu es Rose, Vendeuse Professionnelle #1 de VIENS ON S'CONNA√éT üèÜ

üéØ EXPERTISE PRODUIT APPROFONDIE :
Produit en focus : **${currentProduct.name}**
Prix de vente : **${currentProduct.price.toLocaleString()} FCFA**
${currentProduct.compare_at_price ? `Prix barr√© : ${currentProduct.compare_at_price.toLocaleString()} FCFA (√©conomie: ${(currentProduct.compare_at_price - currentProduct.price).toLocaleString()} FCFA)` : ''}
Stock disponible : ${currentProduct.stock_quantity} unit√©s
Statut : ${currentProduct.status === 'active' ? '‚úÖ Disponible imm√©diatement' : '‚ö†Ô∏è Disponibilit√© limit√©e'}

üìä DONN√âES DE PERFORMANCE EN TEMPS R√âEL :
${this.salesDataService.formatSalesStatsForAI(salesStats)}

üí¨ T√âMOIGNAGES CLIENTS V√âRIFI√âS :
${this.salesDataService.formatTestimonialsForAI(testimonials)}

üöö INFORMATIONS LIVRAISON ACTUALIS√âES :
${this.salesDataService.formatDeliveryInfoForAI(deliveryZones)}

üèÜ AVANTAGES CONCURRENTIELS :
${competitiveAnalysis.uniqueSellingPoints.slice(0, 4).map((point: string, i: number) => `${i + 1}. ${point}`).join('\n')}

üß† ANALYSE CLIENT ACTUELLE :
‚Ä¢ Message re√ßu : "${chatContext.userMessage}"
‚Ä¢ Intention d√©tect√©e : ${intentAnalysis.primary} (${intentAnalysis.confidence}% de confiance)
‚Ä¢ Niveau d'urgence : ${intentAnalysis.urgency}
‚Ä¢ Signaux d'achat : ${intentAnalysis.buyingSignals.join(', ') || '√Ä d√©velopper'}
‚Ä¢ Objections potentielles : ${intentAnalysis.objectionSignals.join(', ') || 'Aucune d√©tect√©e'}
‚Ä¢ Nombre de messages √©chang√©s : ${chatContext.messageCount}
‚Ä¢ Dur√©e de session : ${Math.floor(chatContext.sessionLength / 60)} minutes

üéØ STRAT√âGIE DE VENTE ADAPT√âE :
${this.getSalesStrategy(intentAnalysis, chatContext)}

üìã R√àGLES DE COMMUNICATION PROFESSIONNELLE :
1. **Personnalise** chaque r√©ponse selon l'intention d√©tect√©e
2. **Utilise les vraies donn√©es** (stats, t√©moignages, livraison) pour convaincre
3. **Sois chaleureuse mais professionnelle** - comme une experte bienveillante
4. **Cr√©e l'urgence subtilement** (stock, popularit√©, offres limit√©es)
5. **Propose toujours une action concr√®te** √† la fin
6. **Maximum 4 phrases** courtes et impactantes
7. **Termine par une question engageante** qui pousse √† l'action

üõçÔ∏è TECHNIQUES DE VENTE AVANC√âES :
‚Ä¢ **Social Proof** : Utilise "${salesStats.totalOrders} familles satisfaites"
‚Ä¢ **Urgence** : "Plus que ${currentProduct.stock_quantity} en stock ce mois"
‚Ä¢ **Autorit√©** : "${salesStats.conversionRate * 100}% de nos visiteurs ach√®tent"
‚Ä¢ **Garantie** : "30 jours satisfait ou rembours√© - aucun risque"
‚Ä¢ **Facilit√©** : "Paiement Wave en 30 secondes"
‚Ä¢ **Exclusivit√©** : "Produit con√ßu sp√©cialement pour l'Afrique"

${this.getSpecificTactics(intentAnalysis, currentProduct)}

üìä OBJECTIFS SELON LE CONTEXTE :
${this.getContextualObjectives(intentAnalysis, chatContext)}

FORMAT JSON IMP√âRATIF :
{
  "message": "Ta r√©ponse de vendeuse experte (4 phrases max), chaleureuse et persuasive avec donn√©es r√©elles",
  "choices": ["‚ö° Commander maintenant", "Deuxi√®me choix adapt√©", "Troisi√®me option pertinente"],
  "nextStep": "√©tape_logique_suivante",
  "buyingIntent": score_0_a_1,
  "salesTechnique": "technique_principale_utilis√©e",
  "urgencyLevel": "low|medium|high"
}

üèÜ MISSION : Convertir ce visiteur en client satisfait en utilisant ton expertise professionnelle et les donn√©es r√©elles !`;

    return prompt;
  }

  // ‚úÖ ANALYSE AVANC√âE DE L'INTENTION CLIENT
  private analyzeUserIntent(chatContext: ChatContext): IntentAnalysis {
    const message = chatContext.userMessage.toLowerCase();
    const history = chatContext.conversationHistory;

    // Mots-cl√©s d'intention d'achat
    const buyingKeywords = ['acheter', 'commander', 'prendre', 'veux', 'int√©resse', 'd√©cid√©'];
    const urgentBuyingKeywords = ['maintenant', 'tout de suite', 'imm√©diatement', 'rapidement'];
    const objectionKeywords = ['cher', 'doute', 'h√©sit', 'pas s√ªr', 'r√©fl√©chir', 'budget'];
    const infoKeywords = ['comment', 'pourquoi', 'expliquer', 'd√©tails', 'fonctionne'];
    const comparisonKeywords = ['autres', 'concurrence', 'comparaison', 'similaire'];

    let primaryIntent = 'browsing';
    let confidence = 40;
    let urgency: 'low' | 'medium' | 'high' = 'low';

    // Analyser les signaux d'achat
    const buyingSignals = buyingKeywords.filter(keyword => message.includes(keyword));
    const urgentSignals = urgentBuyingKeywords.filter(keyword => message.includes(keyword));
    const objectionSignals = objectionKeywords.filter(keyword => message.includes(keyword));
    const infoSignals = infoKeywords.filter(keyword => message.includes(keyword));

    // Calcul de l'intention primaire
    if (buyingSignals.length >= 2 || urgentSignals.length >= 1) {
      primaryIntent = 'ready_to_buy';
      confidence = 85;
      urgency = urgentSignals.length > 0 ? 'high' : 'medium';
    } else if (buyingSignals.length >= 1) {
      primaryIntent = 'considering';
      confidence = 70;
      urgency = 'medium';
    } else if (objectionSignals.length >= 1) {
      primaryIntent = 'objecting';
      confidence = 75;
      urgency = 'low';
    } else if (infoSignals.length >= 1) {
      primaryIntent = 'interested';
      confidence = 65;
      urgency = 'low';
    }

    // Ajustements selon l'historique
    if (chatContext.messageCount > 5) {
      confidence += 15;
      if (primaryIntent === 'browsing') primaryIntent = 'interested';
      if (urgency === 'low') urgency = 'medium';
    }

    // Analyser les besoins d'information
    const informationNeeds = [];
    if (message.includes('comment')) informationNeeds.push('usage');
    if (message.includes('prix') || message.includes('co√ªt')) informationNeeds.push('pricing');
    if (message.includes('livr')) informationNeeds.push('delivery');
    if (message.includes('t√©moignage') || message.includes('avis')) informationNeeds.push('social_proof');

    return {
      primary: primaryIntent,
      confidence: Math.min(confidence, 95),
      urgency,
      buyingSignals,
      objectionSignals,
      informationNeeds
    };
  }

  // ‚úÖ STRAT√âGIES DE VENTE SELON L'INTENTION
  private getSalesStrategy(intentAnalysis: IntentAnalysis, chatContext: ChatContext): string {
    switch (intentAnalysis.primary) {
      case 'ready_to_buy':
        return `üöÄ CLIENT PR√äT √Ä ACHETER - Facilite l'achat imm√©diat !
‚Ä¢ Raccourcis le processus - propose le mode express
‚Ä¢ Rassure sur la s√©curit√© du paiement et la livraison
‚Ä¢ Cr√©e une urgence douce (stock, popularit√©)
‚Ä¢ √âvite les longs discours - passe directement √† l'action
‚Ä¢ Propose assistance personnelle si besoin`;

      case 'considering':
        return `ü§î PHASE DE CONSID√âRATION - L√®ve les objections et rassure !
‚Ä¢ Utilise la social proof (t√©moignages, chiffres r√©els)
‚Ä¢ Mentionne la garantie 30 jours satisfait ou rembours√©
‚Ä¢ Partage des t√©moignages sp√©cifiques et v√©rifi√©s
‚Ä¢ Propose un essai sans risque
‚Ä¢ Cr√©e de la valeur ajout√©e (bonus, garanties)`;

      case 'objecting':
        return `‚ö†Ô∏è OBJECTIONS D√âTECT√âES - Transforme les doutes en confiance !
‚Ä¢ √âcoute et reconnais les pr√©occupations
‚Ä¢ Utilise les donn√©es r√©elles pour contrer les objections
‚Ä¢ Partage des cas clients similaires qui ont surmont√© les m√™mes doutes
‚Ä¢ Propose des solutions personnalis√©es
‚Ä¢ Offre des garanties suppl√©mentaires`;

      case 'interested':
        return `üí° INT√âR√äT CONFIRM√â - √âduque et persuade progressivement !
‚Ä¢ Explique les b√©n√©fices concrets avec des exemples
‚Ä¢ Partage des histoires de r√©ussite authentiques
‚Ä¢ D√©montre la valeur vs le prix pay√©
‚Ä¢ Guide vers la d√©cision d'achat √©tape par √©tape
‚Ä¢ Construit la confiance avec des preuves tangibles`;

      default:
        return `üëã PHASE DE D√âCOUVERTE - √âveille l'int√©r√™t et engage !
‚Ä¢ Pose des questions pour comprendre les besoins r√©els
‚Ä¢ Partage les b√©n√©fices les plus attractifs du produit
‚Ä¢ Utilise la curiosit√© et l'intrigue pour maintenir l'attention
‚Ä¢ Construit la confiance progressivement avec des faits
‚Ä¢ Identifie les motivations d'achat potentielles`;
    }
  }

  // ‚úÖ TACTIQUES SP√âCIFIQUES SELON LE PRODUIT ET CONTEXTE
  private getSpecificTactics(intentAnalysis: IntentAnalysis, product: any): string {
    const tactics = [];

    if (intentAnalysis.primary === 'ready_to_buy') {
      tactics.push('üéØ CLOSING : "Voulez-vous que je vous aide √† finaliser votre commande maintenant ?"');
      tactics.push('‚ö° URGENCE : "Je r√©serve votre exemplaire pendant que nous parlons"');
    }

    if (intentAnalysis.objectionSignals.length > 0) {
      tactics.push('üí™ OBJECTION : Utilise la garantie 30 jours et les t√©moignages v√©rifi√©s');
      tactics.push('üõ°Ô∏è S√âCURIT√â : "Aucun risque - remboursement imm√©diat si pas satisfait"');
    }

    if (intentAnalysis.informationNeeds.includes('pricing')) {
      tactics.push('üí∞ PRIX : Justifie avec la valeur long terme vs co√ªt d\'une sortie restaurant');
      tactics.push('üî• VALEUR : "15 000 FCFA pour des ann√©es d\'utilisation familiale"');
    }

    if (product.stock_quantity < 20) {
      tactics.push('‚ö†Ô∏è STOCK : Mentionne subtilement le stock limit√© pour ce mois');
    }

    if (intentAnalysis.urgency === 'low') {
      tactics.push('üïê TIMING : "Les familles qui commencent maintenant voient des r√©sultats en 2 semaines"');
    }

    return tactics.length > 0 ? tactics.join('\n') : '‚ú® STANDARD : Focus sur les b√©n√©fices et la confiance';
  }

  // ‚úÖ OBJECTIFS CONTEXTUELS
  private getContextualObjectives(intentAnalysis: IntentAnalysis, chatContext: ChatContext): string {
    const objectives = [];

    if (intentAnalysis.urgency === 'high') {
      objectives.push('üöÄ PRIORIT√â 1 : Finaliser la vente dans cette conversation');
    } else if (intentAnalysis.urgency === 'medium') {
      objectives.push('üéØ PRIORIT√â 1 : Amener √† une d√©cision d\'achat aujourd\'hui');
    } else {
      objectives.push('üå± PRIORIT√â 1 : D√©velopper l\'int√©r√™t et la confiance');
    }

    if (chatContext.messageCount > 7) {
      objectives.push('‚è∞ PRIORIT√â 2 : √âviter la fatigue conversationnelle - proposer assistance humaine');
    }

    if (intentAnalysis.objectionSignals.length > 0) {
      objectives.push('üõ°Ô∏è PRIORIT√â 2 : Adresser toutes les objections avec des preuves concr√®tes');
    }

    objectives.push('üíù PRIORIT√â 3 : Maintenir une relation client excellente pour fid√©lisation');

    return objectives.join('\n');
  }

  // ‚úÖ PROMPT DE SECOURS
  private getFallbackPrompt(productId: string): string {
    return `Tu es Rose, vendeuse professionnelle experte chez VIENS ON S'CONNA√éT.

Produit en vente : ID ${productId}

MISSION : √ätre une vendeuse chaleureuse, professionnelle et efficace.
- Utilise des techniques de vente modernes
- Sois persuasive sans √™tre agressive  
- R√©ponds toujours en JSON avec { "message", "choices", "nextStep", "buyingIntent" }
- Maximum 4 phrases courtes et impactantes
- Termine par une question engageante

OBJECTIF : Convertir le visiteur en client satisfait !`;
  }

  // ‚úÖ M√âTHODES UTILITAIRES
  formatConversationHistory(history: ChatContext['conversationHistory']): string {
    if (history.length === 0) return "Premi√®re interaction";
    
    return history.slice(-3).map(msg => {
      const role = msg.type === 'user' ? 'Client' : 'Rose';
      const content = msg.content.substring(0, 60) + (msg.content.length > 60 ? '...' : '');
      return `${role}: "${content}"`;
    }).join(' | ');
  }

  analyzeConversationTrends(history: ChatContext['conversationHistory']): {
    engagement: 'low' | 'medium' | 'high';
    sentiment: 'negative' | 'neutral' | 'positive';
    topics: string[];
  } {
    if (history.length === 0) {
      return { engagement: 'low', sentiment: 'neutral', topics: [] };
    }

    const userMessages = history.filter(msg => msg.type === 'user');
    const avgLength = userMessages.reduce((sum, msg) => sum + msg.content.length, 0) / userMessages.length;
    
    let engagement: 'low' | 'medium' | 'high' = 'low';
    if (avgLength > 50) engagement = 'medium';
    if (avgLength > 100 || history.length > 8) engagement = 'high';

    // Analyse du sentiment basique
    const positiveWords = ['bien', 'super', 'parfait', 'excellent', 'int√©resse'];
    const negativeWords = ['probl√®me', 'cher', 'difficile', 'compliqu√©'];
    
    const allText = userMessages.map(msg => msg.content.toLowerCase()).join(' ');
    const positiveCount = positiveWords.filter(word => allText.includes(word)).length;
    const negativeCount = negativeWords.filter(word => allText.includes(word)).length;
    
    let sentiment: 'negative' | 'neutral' | 'positive' = 'neutral';
    if (positiveCount > negativeCount) sentiment = 'positive';
    else if (negativeCount > positiveCount) sentiment = 'negative';

    // Extraction des sujets
    const topics = [];
    if (allText.includes('prix')) topics.push('pricing');
    if (allText.includes('livr')) topics.push('delivery');
    if (allText.includes('comment')) topics.push('usage');
    if (allText.includes('t√©moignage') || allText.includes('avis')) topics.push('testimonials');

    return { engagement, sentiment, topics };
  }

  // ‚úÖ M√âTHODE POUR G√âN√âRER DES R√âPONSES ADAPT√âES AU MOBILE
  generateMobileOptimizedPrompt(basePrompt: string): string {
    return basePrompt + `

üì± OPTIMISATION MOBILE :
- Messages plus courts (2-3 phrases max)
- √âmojis pour la lisibilit√©
- Boutons d'action clairs et directs
- √âvite les longs paragraphes
- Privil√©gie l'interaction rapide

FORMAT MOBILE :
{
  "message": "Message court et percutant (2-3 phrases)",
  "choices": ["‚ö° Action rapide", "‚ùì Question courte", "üìû Contact"],
  "nextStep": "√©tape_mobile_optimis√©e",
  "buyingIntent": score,
  "mobileOptimized": true
}`;
  }
}